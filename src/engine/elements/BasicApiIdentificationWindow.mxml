<?xml version="1.0" encoding="utf-8"?>
<components:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:components="engine.components.*"
				   icon="key"
				   label="identification"
				   
				   headerEnabled="false"
				   
				   doNotGroup="true"
				   
				   createViewportButton="false"
				   windowsStackEnabled="false"
				   resizable="false"
				   
				   checkForOnline="false"
				   
				   setHttpServiceController="vkidentification"
				   
				   closable="false"
				   centered="true"
				   
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:extended="engine.extended.*"
				   xmlns:window="engine.components.window.*">
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			
			import engine.core.Core;
			
			import vk.APIConnection;
			
			override public function init():void
			{
				super.init();
				
				var flashVars: Object = stage.loaderInfo.parameters as Object;
				switch(Core.apiType)
				{
					case 'vk':
					{
						Core.api = new APIConnection(FlexGlobals.topLevelApplication.stage.loaderInfo.parameters as Object);
						break;
					}
						
					default:
					{
						break;
					}
				}
				
				Core.traceObjectItems(flashVars);
				setHttpService.send(flashVars);
			}
			
			override public function setHttpService_resultFunction():void
			{
				var result:Object = Core.checkErrors(setHttpService, label);
				if (result == 0)
				{
					Core.accountData = setHttpService.lastResult.item;
					onIdentificationSuccess();
				}
				else
				{
					Core.addEvent('error', '', true, '', true);
				}
			}
			
			protected function onIdentificationSuccess():void
			{
				Core.firstIdentification = false;
				
				Core.data.refresh();
				Core.removeWindow(this);
				Core.sessionTimer.start();
				Core.identified = true;
				
				Core.callAfter(function():void
				{
					Core.launcher.launch('HAWindow');					
				}, 1);
				
				/*Core.application.viewport.switchStartWindow();*/
			}
		]]>
	</fx:Script>
	
	<components:content>
		<s:Group height="100%">
			<components:FieldSet height="100%" top="5" bottom="5" left="5" right="5">
				<components:content>
					<s:VGroup height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" gap="5">
						<s:Label height="100%" text="{Core.data.locales.dataProvider &amp;&amp; Core.data.locales.dataProvider.length() > 0 ? Core.translate.to(['please you_are_wait']) : 'please wait'}..."/>
					</s:VGroup>
				</components:content>
			</components:FieldSet>
		</s:Group>
	</components:content>
</components:Window>
